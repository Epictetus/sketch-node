16 May 12:46:36 - Your node instance does not have root privileges. This means that the flash XML policy file will be served inline instead of on port 843. This will slow down initial connections slightly.
16 May 12:46:36 - socket.io ready - accepting connections
Express server listening on port 3030
{ socket: 
   { bufferSize: 0,
     fd: 8,
     type: 'tcp4',
     allowHalfOpen: true,
     _readWatcher: 
      { socket: [Circular],
        callback: [Function: onReadable] },
     destroyed: false,
     readable: true,
     _writeQueue: [],
     _writeQueueEncoding: [],
     _writeQueueFD: [],
     _writeQueueCallbacks: [],
     _writeWatcher: 
      { socket: [Circular],
        callback: [Function: onWritable] },
     writable: true,
     _writeImpl: [Function],
     _readImpl: [Function],
     _shutdownImpl: [Function],
     remoteAddress: '122.214.186.134',
     remotePort: 1645,
     server: 
      { stack: [Object],
        connections: 1,
        allowHalfOpen: true,
        watcher: [Object],
        _events: [Object],
        httpAllowHalfOpen: false,
        cache: {},
        settings: [Object],
        redirects: {},
        isCallbacks: {},
        _locals: [Object],
        dynamicViewHelpers: {},
        errorHandlers: [],
        route: '/',
        routes: [Object],
        router: [Getter],
        remove: [Object],
        match: [Object],
        lookup: [Object],
        __usedRouter: true,
        type: 'tcp4',
        fd: 6 },
     ondrain: [Function],
     _idleTimeout: 120000,
     _idleNext: 
      { repeat: 120,
        _idleNext: [Circular],
        _idlePrev: [Circular],
        callback: [Function] },
     _idlePrev: 
      { repeat: 120,
        _idleNext: [Circular],
        _idlePrev: [Circular],
        callback: [Function] },
     _idleStart: Mon, 16 May 2011 03:46:38 GMT,
     _events: 
      { timeout: [Function],
        error: [Function],
        close: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object],
        _headers: [Object],
        _headerNames: [Object],
        app: [Object],
        req: [Circular] } },
  connection: 
   { bufferSize: 0,
     fd: 8,
     type: 'tcp4',
     allowHalfOpen: true,
     _readWatcher: 
      { socket: [Circular],
        callback: [Function: onReadable] },
     destroyed: false,
     readable: true,
     _writeQueue: [],
     _writeQueueEncoding: [],
     _writeQueueFD: [],
     _writeQueueCallbacks: [],
     _writeWatcher: 
      { socket: [Circular],
        callback: [Function: onWritable] },
     writable: true,
     _writeImpl: [Function],
     _readImpl: [Function],
     _shutdownImpl: [Function],
     remoteAddress: '122.214.186.134',
     remotePort: 1645,
     server: 
      { stack: [Object],
        connections: 1,
        allowHalfOpen: true,
        watcher: [Object],
        _events: [Object],
        httpAllowHalfOpen: false,
        cache: {},
        settings: [Object],
        redirects: {},
        isCallbacks: {},
        _locals: [Object],
        dynamicViewHelpers: {},
        errorHandlers: [],
        route: '/',
        routes: [Object],
        router: [Getter],
        remove: [Object],
        match: [Object],
        lookup: [Object],
        __usedRouter: true,
        type: 'tcp4',
        fd: 6 },
     ondrain: [Function],
     _idleTimeout: 120000,
     _idleNext: 
      { repeat: 120,
        _idleNext: [Circular],
        _idlePrev: [Circular],
        callback: [Function] },
     _idlePrev: 
      { repeat: 120,
        _idleNext: [Circular],
        _idlePrev: [Circular],
        callback: [Function] },
     _idleStart: Mon, 16 May 2011 03:46:38 GMT,
     _events: 
      { timeout: [Function],
        error: [Function],
        close: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object],
        _headers: [Object],
        _headerNames: [Object],
        app: [Object],
        req: [Circular] } },
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'app.thash.info:3030',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:2.0.1) Gecko/20100101 Firefox/4.0.1',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-language': 'ja,en-us;q=0.7,en;q=0.3',
     'accept-encoding': 'gzip, deflate',
     'accept-charset': 'Shift_JIS,utf-8;q=0.7,*;q=0.7',
     'keep-alive': '115',
     connection: 'keep-alive',
     cookie: 'socketio=flashsocket',
     'cache-control': 'max-age=0' },
  trailers: {},
  readable: true,
  url: '/',
  method: 'GET',
  statusCode: null,
  client: 
   { bufferSize: 0,
     fd: 8,
     type: 'tcp4',
     allowHalfOpen: true,
     _readWatcher: 
      { socket: [Circular],
        callback: [Function: onReadable] },
     destroyed: false,
     readable: true,
     _writeQueue: [],
     _writeQueueEncoding: [],
     _writeQueueFD: [],
     _writeQueueCallbacks: [],
     _writeWatcher: 
      { socket: [Circular],
        callback: [Function: onWritable] },
     writable: true,
     _writeImpl: [Function],
     _readImpl: [Function],
     _shutdownImpl: [Function],
     remoteAddress: '122.214.186.134',
     remotePort: 1645,
     server: 
      { stack: [Object],
        connections: 1,
        allowHalfOpen: true,
        watcher: [Object],
        _events: [Object],
        httpAllowHalfOpen: false,
        cache: {},
        settings: [Object],
        redirects: {},
        isCallbacks: {},
        _locals: [Object],
        dynamicViewHelpers: {},
        errorHandlers: [],
        route: '/',
        routes: [Object],
        router: [Getter],
        remove: [Object],
        match: [Object],
        lookup: [Object],
        __usedRouter: true,
        type: 'tcp4',
        fd: 6 },
     ondrain: [Function],
     _idleTimeout: 120000,
     _idleNext: 
      { repeat: 120,
        _idleNext: [Circular],
        _idlePrev: [Circular],
        callback: [Function] },
     _idlePrev: 
      { repeat: 120,
        _idleNext: [Circular],
        _idlePrev: [Circular],
        callback: [Function] },
     _idleStart: Mon, 16 May 2011 03:46:38 GMT,
     _events: 
      { timeout: [Function],
        error: [Function],
        close: [Function] },
     ondata: [Function],
     onend: [Function],
     _httpMessage: 
      { output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        socket: [Circular],
        connection: [Circular],
        _events: [Object],
        _headers: [Object],
        _headerNames: [Object],
        app: [Object],
        req: [Circular] } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/',
  query: {},
  app: 
   { stack: 
      [ [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object] ],
     connections: 1,
     allowHalfOpen: true,
     watcher: { host: [Circular], callback: [Function] },
     _events: 
      { request: [Function],
        connection: [Object],
        listening: [Function],
        upgrade: [Function],
        close: [Function] },
     httpAllowHalfOpen: false,
     cache: {},
     settings: 
      { home: '/',
        env: 'development',
        hints: true,
        views: '/home/hash/work/sketch-node/views',
        'view engine': 'ejs' },
     redirects: {},
     isCallbacks: {},
     _locals: { settings: [Object], app: [Circular] },
     dynamicViewHelpers: {},
     errorHandlers: [],
     route: '/',
     routes: 
      { options: [Function],
        get: [Function],
        post: [Function],
        put: [Function],
        delete: [Function],
        trace: [Function],
        connect: [Function],
        propfind: [Function],
        proppatch: [Function],
        mkcol: [Function],
        copy: [Function],
        move: [Function],
        lock: [Function],
        unlock: [Function],
        'version-control': [Function],
        report: [Function],
        checkout: [Function],
        checkin: [Function],
        uncheckout: [Function],
        mkworkspace: [Function],
        update: [Function],
        label: [Function],
        merge: [Function],
        'baseline-control': [Function],
        mkactivity: [Function],
        orderpatch: [Function],
        acl: [Function],
        search: [Function],
        patch: [Function],
        del: [Function],
        all: [Function],
        param: [Function] },
     router: [Getter],
     remove: 
      { [Function]
        options: [Function],
        get: [Function],
        post: [Function],
        put: [Function],
        delete: [Function],
        trace: [Function],
        connect: [Function],
        propfind: [Function],
        proppatch: [Function],
        mkcol: [Function],
        copy: [Function],
        move: [Function],
        lock: [Function],
        unlock: [Function],
        'version-control': [Function],
        report: [Function],
        checkout: [Function],
        checkin: [Function],
        uncheckout: [Function],
        mkworkspace: [Function],
        update: [Function],
        label: [Function],
        merge: [Function],
        'baseline-control': [Function],
        mkactivity: [Function],
        orderpatch: [Function],
        acl: [Function],
        search: [Function],
        patch: [Function],
        del: [Function],
        all: [Function] },
     match: 
      { [Function]
        options: [Function],
        get: [Function],
        post: [Function],
        put: [Function],
        delete: [Function],
        trace: [Function],
        connect: [Function],
        propfind: [Function],
        proppatch: [Function],
        mkcol: [Function],
        copy: [Function],
        move: [Function],
        lock: [Function],
        unlock: [Function],
        'version-control': [Function],
        report: [Function],
        checkout: [Function],
        checkin: [Function],
        uncheckout: [Function],
        mkworkspace: [Function],
        update: [Function],
        label: [Function],
        merge: [Function],
        'baseline-control': [Function],
        mkactivity: [Function],
        orderpatch: [Function],
        acl: [Function],
        search: [Function],
        patch: [Function],
        del: [Function],
        all: [Function] },
     lookup: 
      { [Function]
        options: [Function],
        get: [Function],
        post: [Function],
        put: [Function],
        delete: [Function],
        trace: [Function],
        connect: [Function],
        propfind: [Function],
        proppatch: [Function],
        mkcol: [Function],
        copy: [Function],
        move: [Function],
        lock: [Function],
        unlock: [Function],
        'version-control': [Function],
        report: [Function],
        checkout: [Function],
        checkin: [Function],
        uncheckout: [Function],
        mkworkspace: [Function],
        update: [Function],
        label: [Function],
        merge: [Function],
        'baseline-control': [Function],
        mkactivity: [Function],
        orderpatch: [Function],
        acl: [Function],
        search: [Function],
        patch: [Function],
        del: [Function],
        all: [Function] },
     __usedRouter: true,
     type: 'tcp4',
     fd: 6 },
  res: 
   { output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     _hasBody: true,
     _trailer: '',
     finished: false,
     socket: 
      { bufferSize: 0,
        fd: 8,
        type: 'tcp4',
        allowHalfOpen: true,
        _readWatcher: [Object],
        destroyed: false,
        readable: true,
        _writeQueue: [],
        _writeQueueEncoding: [],
        _writeQueueFD: [],
        _writeQueueCallbacks: [],
        _writeWatcher: [Object],
        writable: true,
        _writeImpl: [Function],
        _readImpl: [Function],
        _shutdownImpl: [Function],
        remoteAddress: '122.214.186.134',
        remotePort: 1645,
        server: [Object],
        ondrain: [Function],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: Mon, 16 May 2011 03:46:38 GMT,
        _events: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: [Circular] },
     connection: 
      { bufferSize: 0,
        fd: 8,
        type: 'tcp4',
        allowHalfOpen: true,
        _readWatcher: [Object],
        destroyed: false,
        readable: true,
        _writeQueue: [],
        _writeQueueEncoding: [],
        _writeQueueFD: [],
        _writeQueueCallbacks: [],
        _writeWatcher: [Object],
        writable: true,
        _writeImpl: [Function],
        _readImpl: [Function],
        _shutdownImpl: [Function],
        remoteAddress: '122.214.186.134',
        remotePort: 1645,
        server: [Object],
        ondrain: [Function],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: Mon, 16 May 2011 03:46:38 GMT,
        _events: [Object],
        ondata: [Function],
        onend: [Function],
        _httpMessage: [Circular] },
     _events: { finish: [Function] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     app: 
      { stack: [Object],
        connections: 1,
        allowHalfOpen: true,
        watcher: [Object],
        _events: [Object],
        httpAllowHalfOpen: false,
        cache: {},
        settings: [Object],
        redirects: {},
        isCallbacks: {},
        _locals: [Object],
        dynamicViewHelpers: {},
        errorHandlers: [],
        route: '/',
        routes: [Object],
        router: [Getter],
        remove: [Object],
        match: [Object],
        lookup: [Object],
        __usedRouter: true,
        type: 'tcp4',
        fd: 6 },
     req: [Circular] },
  next: [Function: next],
  originalMethod: 'GET',
  _route_index: 0,
  params: [] }
16 May 12:46:41 - Answering flash policy request inline
16 May 12:46:41 - Initializing client with transport "flashsocket"
16 May 12:46:41 - Client 7447403878904879 connected
